pipeline{
 
 agent none
 
  stages{
    stage('build'){
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-slim'
          args '-v $HOME/.m2:/root/.m2'
        }
      }
      steps{
        echo 'compiling worker app'
        dir('worker'){
          sh 'mvn compile'
        }
      }
    }
    stage('test'){
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-slim'
          args '-v $HOME/.m2:/root/.m2'
        }
      }
      steps{
        echo 'running unit test on worker app'
        dir('worker'){
          sh 'mvn clean test'
        }
      }
    }
    stage('package'){
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-slim'
          args '-v $HOME/.m2:/root/.m2'
        }
      }
      steps{
        echo 'packaging worker app'
        dir('worker'){
          sh 'mvn package -DskipTests'
          archiveArtifacts artifacts: '**/target/*.jar', fingerprint:true
        }
     }
    }
    stage('docker-package'){
      agent none
      steps{
        echo 'packaging worker app with docker'
        script{
          docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
            def workerImage = docker.build("samopenstack/worker:v${env.BUILD_ID}", "./worker")
            workerImage.push()
            workerImage.push("latest")
          }
        }
      }
    }
    stage('deploy to dev'){
      agent any
      steps{
        echo 'Deploy instavote app with docker compose'
        sh 'docker-compose up -d'
      }
    }
  }
  post{
    always{
      echo 'the job is complete'
    }
  }
}
